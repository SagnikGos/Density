// tailwind.config.ts
import type { Config } from "tailwindcss";
import defaultTheme from "tailwindcss/defaultTheme"; // Import the defaultTheme object

const config = {
  darkMode: ["class"], // Enables dark mode based on a class (usually 'dark' on the html or body tag)
  content: [
    './pages/**/*.{ts,tsx}', // For Pages Router (if you have any)
    './components/**/*.{ts,tsx}', // For components directory
    './app/**/*.{ts,tsx}', // For App Router
    './src/**/*.{ts,tsx}', // General src directory coverage
  ],
  prefix: "", // No prefix for Tailwind classes (standard)
  theme: {
    container: {
      center: true,
      padding: "2rem",
      screens: {
        "2xl": "1400px",
      },
    },
    extend: {
      fontFamily: {
        // Add your custom fonts here, referencing the CSS variables set up in layout.tsx
        sans: ["var(--font-nunito)", ...fontFamily.sans], // Sets Nunito as the default sans-serif font
        nunito: ["var(--font-nunito)", ...fontFamily.sans],
        "pt-sans": ["var(--font-pt-sans)", ...fontFamily.sans],
      },
      colors: {
        // These colors are typically generated by `npx shadcn-ui@latest init`
        // Ensure they match your Matsu theme or desired palette.
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))",
        },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
      keyframes: {
        // Keyframes for animations used by shadcn/ui
        "accordion-down": {
          from: { height: "0" },
          to: { height: "var(--radix-accordion-content-height)" },
        },
        "accordion-up": {
          from: { height: "var(--radix-accordion-content-height)" },
          to: { height: "0" },
        },
      },
      animation: {
        // Animations used by shadcn/ui
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
      },
    },
    typography: (theme) => ({
        DEFAULT: { // Styles for .prose
          css: {
            'blockquote': {
              backgroundColor: `hsl(var(--muted) / 0.4)`, // 40% opacity of muted
              // other blockquote styles like border, color, etc. can also be set here
            },
            'pre': {
              backgroundColor: `hsl(var(--muted) / 0.15)`, // Example: 15% opacity of muted for a subtle background
                                                          // Or use a specific color from your theme: theme('colors.neutral.100')
              // other pre styles
            },
            // You can also define link styles here to ensure consistency
            'a': {
              color: `hsl(var(--primary))`,
              // ... other link styles from your global CSS
            },
          },
        },
        invert: { // Styles for .prose-invert (used with dark:prose-invert)
          css: {
            'blockquote': {
              backgroundColor: `hsl(var(--muted) / 0.5)`, // Ensure --muted is the dark mode version
            },
            'pre': {
              backgroundColor: `hsl(var(--muted) / 0.25)`, // Darker muted for pre in dark mode
            },
             'a': {
              color: `hsl(var(--primary))`, // Ensure --primary is visible in dark mode
              // ... other link styles
            },
          },
        },
      }),
  },
  plugins: [
    require("tailwindcss-animate"), // Plugin for animations (used by shadcn/ui)
    require("@tailwindcss/typography"), // Plugin for styling HTML content (e.g., from TipTap)
  ],
} satisfies Config;

export default config;
